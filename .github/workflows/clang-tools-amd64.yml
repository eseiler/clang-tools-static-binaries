name: clang-tools-static-amd64

on:
  push:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        clang-version: [ 17, 18 ]
        os: [ linux ]
        include:
          - clang-version: 17
            release: llvm-project-17.0.6.src
          - clang-version: 18
            release: llvm-project-18.1.6.src
          - os: linux
            runner: ubuntu-latest
            os-cmake-args: '-DLLVM_BUILD_STATIC=ON -DCMAKE_CXX_FLAGS="-s -flto" ${POSIX_CMAKE_ARGS}'
            build-args: '-j$(nproc)'
            bindir: '/build/bin'
            dotexe: ''
            shacmd: 'sha512sum'
    runs-on: ${{ matrix.runner }}
    env:
      COMMON_CMAKE_ARGS: '-DBUILD_SHARED_LIBS=OFF -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra"'
      POSIX_CMAKE_ARGS: '-DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_CXX_COMPILER=g++-10 -DCMAKE_C_COMPILER=gcc-10'
      RELEASE: '${{ matrix.release }}'
      suffix: '${{ matrix.clang-version }}_${{ matrix.os }}-amd64'
    steps:
    - name: download patches
      # we download a tarball of this repo, as the presence of a .git directory leaks
      # the commit hash of this repository into the clang binaries
      shell: bash
      run: curl -L https://github.com/${{ github.repository }}/archive/${{ github.ref }}.tar.gz | tar xvz --strip 1

    - name: get llvm-project
      shell: bash
      run: |
        version=${RELEASE##llvm-project-}; version=${version%.src}
        curl -LO https://github.com/llvm/llvm-project/releases/download/llvmorg-${version}/${{ matrix.release }}.tar.xz

    - name: unpack llvm-project
      shell: bash
      run: |
        tar xf ${{ matrix.release }}.tar.xz ${{ matrix.extra-tar-args }}

    - name: cmake
      run: cmake -S ${{ matrix.release }}/llvm -B ${{ matrix.release }}/build ${{ env.COMMON_CMAKE_ARGS }} ${{ matrix.os-cmake-args }} ${{ matrix.extra-cmake-args }}

    - name: build
      run: cmake --build ${{ matrix.release }}/build ${{ matrix.build-args }} --target clang-format clang-query clang-tidy clang-apply-replacements

    - name: rename output binary
      run: |
        cd ${{ matrix.release }}${{ matrix.bindir }}
        mv clang-format${{ matrix.dotexe }} clang-format-${{ env.suffix }}${{ matrix.dotexe }}
        mv clang-query${{ matrix.dotexe }} clang-query-${{ env.suffix }}${{ matrix.dotexe }}
        mv clang-tidy${{ matrix.dotexe }} clang-tidy-${{ env.suffix }}${{ matrix.dotexe }}
        mv clang-apply-replacements${{ matrix.dotexe }} clang-apply-replacements-${{ env.suffix }}${{ matrix.dotexe }}

    - name: create and print sha512sum
      shell: bash
      run: |
        cd ${{ matrix.release }}${{ matrix.bindir }}
        ${{ matrix.shacmd }} clang-format-${{ env.suffix }} > clang-format-${{ env.suffix }}.sha512sum
        ${{ matrix.shacmd }} clang-query-${{ env.suffix }} > clang-query-${{ env.suffix }}.sha512sum
        ${{ matrix.shacmd }} clang-tidy-${{ env.suffix }} > clang-tidy-${{ env.suffix }}.sha512sum
        ${{ matrix.shacmd }} clang-apply-replacements-${{ env.suffix }} > clang-apply-replacements-${{ env.suffix }}.sha512sum
        echo "Checksums are: "
        cat clang-format-${{ env.suffix }}.sha512sum
        cat clang-query-${{ env.suffix }}.sha512sum
        cat clang-tidy-${{ env.suffix }}.sha512sum
        cat clang-apply-replacements-${{ env.suffix }}.sha512sum

    - name: upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: clang-tools-${{ matrix.clang-version }}
        path: "${{ matrix.release }}${{ matrix.bindir }}/clang-*-${{ env.suffix }}*"
        retention-days: 1
